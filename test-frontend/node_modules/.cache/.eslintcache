[{"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\index.tsx":"1","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\reportWebVitals.ts":"2","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\App\\index.tsx":"3","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\globalState.ts":"4","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\Navbar\\index.tsx":"5","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\List\\index.tsx":"6","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\Show\\index.tsx":"7","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\Show\\store.ts":"8","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\List\\store.ts":"9","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\List\\components\\ListItem\\index.tsx":"10","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\Button\\index.tsx":"11","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\OrderStatus\\index.tsx":"12","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\DeliveryType\\index.tsx":"13","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\Tag\\index.tsx":"14"},{"size":521,"mtime":1662378087176,"results":"15","hashOfConfig":"16"},{"size":463,"mtime":1662378087177,"results":"17","hashOfConfig":"16"},{"size":981,"mtime":1662378087166,"results":"18","hashOfConfig":"16"},{"size":1835,"mtime":1662378087184,"results":"19","hashOfConfig":"16"},{"size":1647,"mtime":1662378087171,"results":"20","hashOfConfig":"16"},{"size":2292,"mtime":1662455951517,"results":"21","hashOfConfig":"16"},{"size":585,"mtime":1662378087182,"results":"22","hashOfConfig":"16"},{"size":272,"mtime":1662378087183,"results":"23","hashOfConfig":"16"},{"size":1815,"mtime":1662378087179,"results":"24","hashOfConfig":"16"},{"size":1092,"mtime":1662378087178,"results":"25","hashOfConfig":"16"},{"size":1201,"mtime":1662378087167,"results":"26","hashOfConfig":"16"},{"size":797,"mtime":1662378087172,"results":"27","hashOfConfig":"16"},{"size":667,"mtime":1662378087170,"results":"28","hashOfConfig":"16"},{"size":576,"mtime":1662378087174,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nmvpgn",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\index.tsx",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\reportWebVitals.ts",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\App\\index.tsx",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\globalState.ts",["62","63","64","65"],"import { createContext, useContext } from \"react\";\r\nimport client from \"api/gql\";\r\nimport {\r\n  DELIVERY_TYPES_QUERY,\r\n  ORDER_STATUSES_QUERY,\r\n  PRODUCT_STATUSES_QUERY,\r\n} from \"~/screens/queries\";\r\nimport { CrmType } from \"~/api/types/crmType\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\ntype Status = null | Promise<any> | true;\r\n\r\nexport class GlobalState {\r\n  data: {\r\n    orderStatuses: CrmType[];\r\n    deliveryTypes: CrmType[];\r\n    productStatuses: CrmType[];\r\n  } = {\r\n    orderStatuses: [],\r\n    deliveryTypes: [],\r\n    productStatuses: [],\r\n  };\r\n\r\n  status: {\r\n    orderStatuses: Status;\r\n    deliveryTypes: Status;\r\n    productStatuses: Status;\r\n  } = {\r\n    orderStatuses: null,\r\n    deliveryTypes: null,\r\n    productStatuses: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get orderStatuses() {\r\n    if (this.status.orderStatuses === null) {\r\n    }\r\n    return this.data.orderStatuses;\r\n  }\r\n\r\n  setOrderStatuses(statuses: CrmType[]) {\r\n    console.log(statuses);\r\n    this.data.orderStatuses = statuses;\r\n    this.status.orderStatuses = true;\r\n  }\r\n\r\n  setProductStatuses(statuses: CrmType[]) {\r\n    this.data.productStatuses = statuses;\r\n    this.status.productStatuses = true;\r\n  }\r\n\r\n  setDeliveryTypes(statuses: CrmType[]) {\r\n    this.data.deliveryTypes = statuses;\r\n    this.status.deliveryTypes = true;\r\n  }\r\n\r\n  get productStatuses() {\r\n    if (this.status.productStatuses === null) {\r\n    }\r\n    return this.data.productStatuses;\r\n  }\r\n\r\n  get deliveryTypes() {\r\n    if (this.status.deliveryTypes === null) {\r\n    }\r\n    return this.data.deliveryTypes;\r\n  }\r\n}\r\n\r\nexport const GlobalStateContext = createContext(new GlobalState());\r\nexport const GlobalStateProvider = GlobalStateContext.Provider;\r\n\r\nexport function useGlobalState() {\r\n  return useContext(GlobalStateContext);\r\n}\r\n","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\Navbar\\index.tsx",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\List\\index.tsx",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\Show\\index.tsx",["66","67","68"],"import React from \"react\";\r\nimport OrdersShowStore from \"./store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styles from \"./styles.m.styl\";\r\n\r\ntype ShowParams = {\r\n  id: string;\r\n};\r\n\r\nconst OrdersShow = observer(\r\n  (): JSX.Element => {\r\n    const [state] = React.useState(new OrdersShowStore());\r\n\r\n    return (\r\n      <div className={styles.screenWrapper}>\r\n        <div className={styles.screen}>\r\n          <div className={styles.items}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default OrdersShow;\r\n","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\Show\\store.ts",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\List\\store.ts",["69","70"],"import { makeAutoObservable } from \"mobx\";\r\nimport { OrdersListItem } from \"./types\";\r\nimport { createBrowserHistory, History } from \"history\";\r\nimport client from \"api/gql\";\r\nimport { GET_ORDERS_QUERY } from \"~/screens/Orders/List/queries\";\r\n\r\nexport default class OrdersListState {\r\n  initialized = false;\r\n  loading = false;\r\n  page = 1;\r\n  totalPages = 1;\r\n  orders: OrdersListItem[] = [];\r\n  history: History;\r\n\r\n  setInitialized(val: boolean) {\r\n    this.initialized = val;\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    this.history = createBrowserHistory();\r\n  }\r\n\r\n  setOrders(orders: OrdersListItem[]): void {\r\n    this.orders = orders;\r\n  }\r\n\r\n  startLoading(): void {\r\n    this.loading = true;\r\n  }\r\n\r\n  stopLoading(): void {\r\n    this.loading = false;\r\n  }\r\n\r\n  setPage(page: number): void {\r\n    this.page = page;\r\n    const url = new URL(window.location.href);\r\n    if (url.searchParams.get(\"page\") !== this.page.toString()) {\r\n      url.searchParams.set(\"page\", \"\" + this.page);\r\n      this.history.replace(url.pathname + url.search, {});\r\n    }\r\n  }\r\n\r\n  nextPage(): void {\r\n    if (this.page >= this.totalPages) return;\r\n    this.setPage(this.page + 1);\r\n    this.loading = true;\r\n    this.loadOrders();\r\n  }\r\n\r\n  prevPage(): void {\r\n    if (this.page <= 1) return;\r\n    this.setPage(this.page - 1);\r\n    this.loading = true;\r\n    this.loadOrders();\r\n  }\r\n\r\n  setTotalPages(totalPages: number): void {\r\n    this.totalPages = totalPages;\r\n  }\r\n\r\n  get canNext(): boolean {\r\n    return this.page < this.totalPages;\r\n  }\r\n\r\n  get canPrev(): boolean {\r\n    return this.page > 1;\r\n  }\r\n\r\n  async loadOrders() {\r\n    this.loading = true;\r\n    this.loading = false;\r\n  }\r\n\r\n  initialize() {\r\n    if (this.initialized) return;\r\n    this.initialized = true;\r\n    this.loadOrders();\r\n  }\r\n}\r\n","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\screens\\Orders\\List\\components\\ListItem\\index.tsx",["71"],"import React from \"react\";\r\nimport styles from \"./styles.m.styl\";\r\nimport { OrdersListItem } from \"../../types\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport Tag from \"components/Tag\";\r\nimport OrderStatus from \"components/OrderStatus\";\r\nimport DeliveryType from \"components/DeliveryType\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListItem = observer(\r\n  ({ order }: { order: OrdersListItem }): JSX.Element => {\r\n    return (\r\n      <div className={styles.row}>\r\n        <div className={styles.orderNumber}>\r\n          <Link to={`/orders/${order.id}`}>{order.number}</Link>\r\n        </div>\r\n        <div>{moment(order.createdAt).format(\"DD.MM.YYYY HH:mm\")}</div>\r\n        <div title={order.delivery?.code}>\r\n          {order.delivery && <DeliveryType code={order.delivery?.code} />}\r\n        </div>\r\n        <div>{moment().from(order.createdAt, true)}</div>\r\n        <div title={order.status}>\r\n          <OrderStatus code={order.status} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ListItem;\r\n","C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\Button\\index.tsx",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\OrderStatus\\index.tsx",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\DeliveryType\\index.tsx",[],"C:\\prj\\candidate-test-task3-nikifilini\\test-frontend\\src\\components\\Tag\\index.tsx",[],{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":4,"column":3,"nodeType":"74","messageId":"75","endLine":4,"endColumn":23},{"ruleId":"72","severity":1,"message":"77","line":5,"column":3,"nodeType":"74","messageId":"75","endLine":5,"endColumn":23},{"ruleId":"72","severity":1,"message":"78","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":6,"endColumn":25},{"ruleId":"72","severity":1,"message":"79","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":19},{"ruleId":"72","severity":1,"message":"80","line":7,"column":6,"nodeType":"74","messageId":"75","endLine":7,"endColumn":16},{"ruleId":"72","severity":1,"message":"81","line":13,"column":12,"nodeType":"74","messageId":"75","endLine":13,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"72","severity":1,"message":"82","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":26},{"ruleId":"72","severity":1,"message":"83","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":11},"@typescript-eslint/no-unused-vars","'client' is defined but never used.","Identifier","unusedVar","'DELIVERY_TYPES_QUERY' is defined but never used.","'ORDER_STATUSES_QUERY' is defined but never used.","'PRODUCT_STATUSES_QUERY' is defined but never used.","'useParams' is defined but never used.","'ShowParams' is defined but never used.","'state' is assigned a value but never used.","'GET_ORDERS_QUERY' is defined but never used.","'Tag' is defined but never used."]