{"ast":null,"code":"var _jsxFileName = \"C:\\\\prj\\\\candidate-test-task3-nikifilini\\\\test-frontend\\\\src\\\\components\\\\DeliveryType\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Tag from \"components/Tag\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useGlobalState } from \"~/screens/globalState\";\nimport { find } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryType = observer(_c = _s(({\n  code\n}) => {\n  var _find;\n\n  _s();\n\n  const globalState = useGlobalState();\n  const name = ((_find = find(globalState.deliveryTypes, {\n    code\n  })) === null || _find === void 0 ? void 0 : _find.name) || code;\n  let color = \"blue\";\n\n  switch (code) {\n    case null:\n    case \"nondost\":\n      color = \"grey\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    text: name,\n    color: color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}, \"3ZaeCfZAHXFD1ZMeNLcC1TELaKU=\", false, function () {\n  return [useGlobalState];\n}));\n_c2 = DeliveryType;\nexport default DeliveryType;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DeliveryType$observer\");\n$RefreshReg$(_c2, \"DeliveryType\");","map":{"version":3,"sources":["C:/prj/candidate-test-task3-nikifilini/test-frontend/src/components/DeliveryType/index.tsx"],"names":["Tag","React","observer","useGlobalState","find","DeliveryType","code","globalState","name","deliveryTypes","color"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;;AAMA,MAAMC,YAAY,GAAGH,QAAQ,SAC3B,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAwC;AAAA;;AAAA;;AACtC,QAAMC,WAAW,GAAGJ,cAAc,EAAlC;AACA,QAAMK,IAAI,GAAG,UAAAJ,IAAI,CAACG,WAAW,CAACE,aAAb,EAA4B;AAAEH,IAAAA;AAAF,GAA5B,CAAJ,gDAA2CE,IAA3C,KAAmDF,IAAhE;AAEA,MAAII,KAAsB,GAAG,MAA7B;;AACA,UAAQJ,IAAR;AACE,SAAK,IAAL;AACA,SAAK,SAAL;AACEI,MAAAA,KAAK,GAAG,MAAR;AAHJ;;AAKA,sBAAO,QAAC,GAAD;AAAK,IAAA,IAAI,EAAEF,IAAX;AAAiB,IAAA,KAAK,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZ0B;AAAA,UAELP,cAFK;AAAA,GAA7B;MAAME,Y;AAeN,eAAeA,YAAf","sourcesContent":["import Tag from \"components/Tag\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useGlobalState } from \"~/screens/globalState\";\r\nimport { find } from \"lodash\";\r\n\r\ninterface StatusProps {\r\n  code: string;\r\n}\r\n\r\nconst DeliveryType = observer(\r\n  ({ code }: StatusProps): JSX.Element => {\r\n    const globalState = useGlobalState();\r\n    const name = find(globalState.deliveryTypes, { code })?.name || code;\r\n\r\n    let color: \"blue\" | \"grey\" = \"blue\";\r\n    switch (code) {\r\n      case null:\r\n      case \"nondost\":\r\n        color = \"grey\";\r\n    }\r\n    return <Tag text={name} color={color} />;\r\n  }\r\n);\r\n\r\nexport default DeliveryType;\r\n"]},"metadata":{},"sourceType":"module"}