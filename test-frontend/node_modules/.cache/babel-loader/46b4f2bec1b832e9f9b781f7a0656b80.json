{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { createBrowserHistory } from \"history\";\nexport default class OrdersListState {\n  setInitialized(val) {\n    this.initialized = val;\n  }\n\n  constructor() {\n    this.initialized = false;\n    this.loading = false;\n    this.page = 1;\n    this.totalPages = 1;\n    this.orders = [];\n    this.history = void 0;\n    makeAutoObservable(this);\n    this.history = createBrowserHistory();\n  }\n\n  setOrders(orders) {\n    this.orders = orders;\n  }\n\n  startLoading() {\n    this.loading = true;\n  }\n\n  stopLoading() {\n    this.loading = false;\n  }\n\n  setPage(page) {\n    this.page = page;\n    const url = new URL(window.location.href);\n\n    if (url.searchParams.get(\"page\") !== this.page.toString()) {\n      url.searchParams.set(\"page\", \"\" + this.page);\n      this.history.replace(url.pathname + url.search, {});\n    }\n  }\n\n  nextPage() {\n    if (this.page >= this.totalPages) return;\n    this.setPage(this.page + 1);\n    this.loading = true;\n    this.loadOrders();\n  }\n\n  prevPage() {\n    if (this.page <= 1) return;\n    this.setPage(this.page - 1);\n    this.loading = true;\n    this.loadOrders();\n  }\n\n  setTotalPages(totalPages) {\n    this.totalPages = totalPages;\n  }\n\n  get canNext() {\n    return this.page < this.totalPages;\n  }\n\n  get canPrev() {\n    return this.page > 1;\n  }\n\n  async loadOrders() {\n    this.loading = true;\n    this.loading = false;\n  }\n\n  initialize() {\n    if (this.initialized) return;\n    this.initialized = true;\n    this.loadOrders();\n  }\n\n}","map":{"version":3,"sources":["C:/prj/candidate-test-task3-nikifilini/test-frontend/src/screens/Orders/List/store.ts"],"names":["makeAutoObservable","createBrowserHistory","OrdersListState","setInitialized","val","initialized","constructor","loading","page","totalPages","orders","history","setOrders","startLoading","stopLoading","setPage","url","URL","window","location","href","searchParams","get","toString","set","replace","pathname","search","nextPage","loadOrders","prevPage","setTotalPages","canNext","canPrev","initialize"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AAEA,SAASC,oBAAT,QAA8C,SAA9C;AAIA,eAAe,MAAMC,eAAN,CAAsB;AAQnCC,EAAAA,cAAc,CAACC,GAAD,EAAe;AAC3B,SAAKC,WAAL,GAAmBD,GAAnB;AACD;;AAEDE,EAAAA,WAAW,GAAG;AAAA,SAXdD,WAWc,GAXA,KAWA;AAAA,SAVdE,OAUc,GAVJ,KAUI;AAAA,SATdC,IASc,GATP,CASO;AAAA,SARdC,UAQc,GARD,CAQC;AAAA,SAPdC,MAOc,GAPa,EAOb;AAAA,SANdC,OAMc;AACZX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,SAAKW,OAAL,GAAeV,oBAAoB,EAAnC;AACD;;AAEDW,EAAAA,SAAS,CAACF,MAAD,EAAiC;AACxC,SAAKA,MAAL,GAAcA,MAAd;AACD;;AAEDG,EAAAA,YAAY,GAAS;AACnB,SAAKN,OAAL,GAAe,IAAf;AACD;;AAEDO,EAAAA,WAAW,GAAS;AAClB,SAAKP,OAAL,GAAe,KAAf;AACD;;AAEDQ,EAAAA,OAAO,CAACP,IAAD,EAAqB;AAC1B,SAAKA,IAAL,GAAYA,IAAZ;AACA,UAAMQ,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAZ;;AACA,QAAIJ,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,MAArB,MAAiC,KAAKd,IAAL,CAAUe,QAAV,EAArC,EAA2D;AACzDP,MAAAA,GAAG,CAACK,YAAJ,CAAiBG,GAAjB,CAAqB,MAArB,EAA6B,KAAK,KAAKhB,IAAvC;AACA,WAAKG,OAAL,CAAac,OAAb,CAAqBT,GAAG,CAACU,QAAJ,GAAeV,GAAG,CAACW,MAAxC,EAAgD,EAAhD;AACD;AACF;;AAEDC,EAAAA,QAAQ,GAAS;AACf,QAAI,KAAKpB,IAAL,IAAa,KAAKC,UAAtB,EAAkC;AAClC,SAAKM,OAAL,CAAa,KAAKP,IAAL,GAAY,CAAzB;AACA,SAAKD,OAAL,GAAe,IAAf;AACA,SAAKsB,UAAL;AACD;;AAEDC,EAAAA,QAAQ,GAAS;AACf,QAAI,KAAKtB,IAAL,IAAa,CAAjB,EAAoB;AACpB,SAAKO,OAAL,CAAa,KAAKP,IAAL,GAAY,CAAzB;AACA,SAAKD,OAAL,GAAe,IAAf;AACA,SAAKsB,UAAL;AACD;;AAEDE,EAAAA,aAAa,CAACtB,UAAD,EAA2B;AACtC,SAAKA,UAAL,GAAkBA,UAAlB;AACD;;AAEU,MAAPuB,OAAO,GAAY;AACrB,WAAO,KAAKxB,IAAL,GAAY,KAAKC,UAAxB;AACD;;AAEU,MAAPwB,OAAO,GAAY;AACrB,WAAO,KAAKzB,IAAL,GAAY,CAAnB;AACD;;AAEe,QAAVqB,UAAU,GAAG;AACjB,SAAKtB,OAAL,GAAe,IAAf;AACA,SAAKA,OAAL,GAAe,KAAf;AACD;;AAED2B,EAAAA,UAAU,GAAG;AACX,QAAI,KAAK7B,WAAT,EAAsB;AACtB,SAAKA,WAAL,GAAmB,IAAnB;AACA,SAAKwB,UAAL;AACD;;AAzEkC","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { OrdersListItem } from \"./types\";\r\nimport { createBrowserHistory, History } from \"history\";\r\nimport client from \"api/gql\";\r\nimport { GET_ORDERS_QUERY } from \"~/screens/Orders/List/queries\";\r\n\r\nexport default class OrdersListState {\r\n  initialized = false;\r\n  loading = false;\r\n  page = 1;\r\n  totalPages = 1;\r\n  orders: OrdersListItem[] = [];\r\n  history: History;\r\n\r\n  setInitialized(val: boolean) {\r\n    this.initialized = val;\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    this.history = createBrowserHistory();\r\n  }\r\n\r\n  setOrders(orders: OrdersListItem[]): void {\r\n    this.orders = orders;\r\n  }\r\n\r\n  startLoading(): void {\r\n    this.loading = true;\r\n  }\r\n\r\n  stopLoading(): void {\r\n    this.loading = false;\r\n  }\r\n\r\n  setPage(page: number): void {\r\n    this.page = page;\r\n    const url = new URL(window.location.href);\r\n    if (url.searchParams.get(\"page\") !== this.page.toString()) {\r\n      url.searchParams.set(\"page\", \"\" + this.page);\r\n      this.history.replace(url.pathname + url.search, {});\r\n    }\r\n  }\r\n\r\n  nextPage(): void {\r\n    if (this.page >= this.totalPages) return;\r\n    this.setPage(this.page + 1);\r\n    this.loading = true;\r\n    this.loadOrders();\r\n  }\r\n\r\n  prevPage(): void {\r\n    if (this.page <= 1) return;\r\n    this.setPage(this.page - 1);\r\n    this.loading = true;\r\n    this.loadOrders();\r\n  }\r\n\r\n  setTotalPages(totalPages: number): void {\r\n    this.totalPages = totalPages;\r\n  }\r\n\r\n  get canNext(): boolean {\r\n    return this.page < this.totalPages;\r\n  }\r\n\r\n  get canPrev(): boolean {\r\n    return this.page > 1;\r\n  }\r\n\r\n  async loadOrders() {\r\n    this.loading = true;\r\n    this.loading = false;\r\n  }\r\n\r\n  initialize() {\r\n    if (this.initialized) return;\r\n    this.initialized = true;\r\n    this.loadOrders();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}